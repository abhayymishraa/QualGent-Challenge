name: QualGent - CI Test Submission

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  run-and-monitor-job:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install CLI dependencies and link command
        working-directory: ./cli
        run: |
          npm install
          npm link

      - name: Submit Test Job
        id: submit
        run: |
          # We run a single, static command to prove the integration works.
          job_output=$(qgjob submit \
            --org-id=github-actions \
            --app-version-id=build-${{ github.run_id }} \
            --test=tests/tests.spec.ts \
            --target=emulator \
            --priority=10)

          echo "Job submission output:"
          echo "$job_output"

          # Parse the job_id from the JSON and save it for the next step
          job_id=$(echo "$job_output" | grep '"job_id"' | awk -F'"' '{print $4}')
          
          if [ -z "$job_id" ]; then
            echo "::error::Could not parse job_id from the response."
            exit 1
          fi
          
          echo "job_id=$job_id" >> "$GITHUB_OUTPUT"

      - name: Poll for Job Completion
        if: steps.submit.outputs.job_id
        run: |
          JOB_ID="${{ steps.submit.outputs.job_id }}"
          echo "Polling status for job: $JOB_ID"
          
          # Loop for 3 minutes (12 tries * 15 seconds)
          for i in {1..12}; do
            status_output=$(qgjob status $JOB_ID || true)
            echo "$status_output"
            status=$(echo "$status_output" | grep '"status"' | awk -F'"' '{print $4}')

            if [[ "$status" == "completed" ]]; then
              echo "✅ Job completed successfully! Workflow PASSED."
              exit 0
            elif [[ "$status" == "failed" ]]; then
              echo "::error::❌ Job failed! Workflow FAILED."
              exit 1
            fi
            
            echo "Current status is '$status'. Waiting 15 seconds..."
            sleep 15
          done

          echo "::error::Polling timed out after 3 minutes. Workflow FAILED."
          exit 1